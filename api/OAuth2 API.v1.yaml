openapi: 3.0.0
tags:
  - name: Эндпоинты
info:
  title: Авторизация OAuth2
  version: 1.0.0
  description: >-
    API взаимодействия с модулем OAuth2 Dromon'a


    Схема действий проста:

    - Пользователь направляется на страницу OAuth2 Dromon'a и нажимает кнопку
    авторизации

    - Пользователь перенаправляется на вашу страницу с query параметрами
    `scope`, `code` и `state`

    - Твой сервер, используя `code` получает токены

    - Сервер с помощью `access` токена получает пользователя

    - Готово!
  contact:
    name: SuhEugene
    url: 'https://discord.gg/xFfNay3'
    email: suheugene@ya.ru
servers:
  - url: 'https://oauth.drom.one'
paths:
  /token:
    post:
      summary: Код -> Новая пара токенов
      operationId: post-token
      responses:
        '200': &ref_0
          description: Успешное получение нового токена
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  type:
                    type: string
                  expires_in:
                    type: number
                required:
                  - access_token
                  - refresh_token
                  - type
                  - expires_in
              examples:
                Example:
                  value:
                    access_token: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNWZkYjhhYzNkYWE3ZTkzMTQ4ZGZjNTQzIiwiYXBwX2lkIjoiNWZkMTNiM2M0NWE2ZWU1MWYxYTZmNGQzIiwic2NvcGUiOlsiZGF0YSJdLCJpYXQiOjE2MDkyNzkwMTAsImV4cCI6MTYwOTg4MzgxMH0.ThereWillBeValidSign
                    refresh_token: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNWZkYjhhYzNkYWE3ZTkzMTQ4ZGZjNTQzIiwiYXBwX2lkIjoiNWZkMTNiM2M0NWE2ZWU1MWYxYTZmNGQzIiwic2NvcGUiOlsiZGF0YSJdLCJpYXQiOjE2MDkyNzkwMTAsImV4cCI6MTYxMTA5MzQxMH0.ThereWillBeValidSign
                    type: Bearer
                    expires_in: 604800
        '400': &ref_1
          description: Какая-либо ошибка при отправке неверных данных
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  e:
                    type: string
              examples:
                Invalid code:
                  value:
                    error: Invalid code
                    e: IC
                Invalid app:
                  value:
                    error: Invalid app
                    e: IA
                Invalid token:
                  value:
                    error: Invalid token
                    e: IT
      description: Получение токенов для дальнейшего использования API
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                client_id:
                  type: string
                  minLength: 24
                  maxLength: 24
                client_secret:
                  type: string
                redirect_uri:
                  type: string
                scope:
                  type: array
                  items:
                    type: string
                    enum:
                      - data
                      - status
                      - role
                      - balance
                      - set-status
                code:
                  type: string
              required:
                - client_id
                - client_secret
                - redirect_uri
                - scope
                - code
            examples:
              Example:
                value:
                  client_id: 1a2b3c4d5e6f7a8b9c0d1e2f
                  client_secret: '1234567890'
                  redirect_uri: 'https://example.com/login'
                  scope:
                    - data
                  code: '12345678901234567890'
        description: >-
          Абсолютно все поля, отправляемые на сервер, должны соответствовать
          хранящимся на сервере
      tags:
        - Эндпоинты
  /refresh:
    parameters: []
    post:
      tags:
        - Эндпоинты
      summary: Refresh токен -> Новая пара токенов
      operationId: post-refresh
      responses:
        '200': *ref_0
        '400': *ref_1
      description: Повторное получение токенов для дальнейшего использования API
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                client_id:
                  type: string
                  minLength: 24
                  maxLength: 24
                client_secret:
                  type: string
                redirect_uri:
                  type: string
                scope:
                  type: array
                  items:
                    type: string
                    enum:
                      - data
                      - status
                      - role
                      - balance
                      - set-status
                refresh_token:
                  type: string
              required:
                - client_id
                - client_secret
                - redirect_uri
                - scope
                - refresh_token
            examples:
              Example:
                value:
                  client_id: 1a2b3c4d5e6f7a8b9c0d1e2f
                  client_secret: '1234567890'
                  redirect_uri: 'https://example.com/login'
                  scope:
                    - data
                  refresh_token: >-
                    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNWZkYjhhYzNkYWE3ZTkzMTQ4ZGZjNTQzIiwiYXBwX2lkIjoiNWZkMTNiM2M0NWE2ZWU1MWYxYTZmNGQzIiwic2NvcGUiOlsiZGF0YSJdLCJpYXQiOjE2MDkyNzkwMTAsImV4cCI6MTYxMTA5MzQxMH0.ThereWillBeValidSign
  /api/user:
    get:
      summary: Получение пользователя
      tags:
        - Эндпоинты
      responses:
        '200': &ref_2
          description: >-
            Самый обыкновенный пользователь


            `role` и `status` могут отсутствовать, если отсутствуют необходимые
            `scope`
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  uuid:
                    type: string
                  id:
                    type: string
                  _id:
                    type: string
                  username:
                    type: string
                  status:
                    type: string
                  role:
                    type: number
                required:
                  - uuid
                  - id
                  - _id
                  - username
              examples:
                Example:
                  value:
                    uuid: 468ee80f21434afebaf6c1583c519494
                    id: '404236405116764162'
                    _id: 5fdb8ac3daa7e93148dfc543
                    username: SuhEugene
                    status: Насрал в кувшин
                    role: 2
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  error:
                    type: string
                  e:
                    type: string
                required:
                  - error
                  - e
              examples:
                Example:
                  value:
                    error: User not found
                    e: UNF
      operationId: get-api-user
      security:
        - Authorization: []
      description: >-
        Возвращает объект пользователя со всеми данными, необходимыми для его
        идентификации. Опционально можно получить `role` и `status`, если
        изначально отправить пользователя на правильную страницу
components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      description: '`access_token`, полученный с помощью `code` или `refresh_token`'
  responses:
    '400': *ref_1
    Success-new-token: *ref_0
    User: *ref_2
